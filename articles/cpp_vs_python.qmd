---
title: C++ vs Python

---

![](../images/c++.png){width=75} ![](../images/python.png){width=75}


## Background

Both c++ and python are powerful, capable languages. Let's explore some of their pros and cons for machine learning/ai.

Previously, c and c++ languages were mainly just used for developement. With the immergence of data science and machine learning, c and c++ are now being used underneath many data science and machine learning functions. For example, python and r and their data science are written in c, objective c or c++.

`tensorflow`, `pytorch`, `pandas`, `numpy`

## Conclusion

There are different levels of abstraction of computer interpretable code. Python is the highest therefore the most readable, while c++ is closer to the hardware and more capable for building highly computationally intensive systems/tools. Then end goal is to develop all machine learning/artificial intelligence packages in c/c++ or something similar that is exretemely robust, effifient, and close to the hardware, then package that code and wrap it into a clean, concise python or (similar language) api. That way the advantages of c++ and python can both be capitalized on. Although, in our current age with our current technology, our c++ and python functions are not knit closely enough for this. I tried installing cuda and running some basic python functions on my local gpu and was thrown so many errors. Quite a bit of c++ was necessary to debug them. But maybe cloud gpus are the way things are going? Either way, I don't see c++ knowledge being obsolete for a long time. Perhaps it will one day though. That's the goal of artificial intelligence.

